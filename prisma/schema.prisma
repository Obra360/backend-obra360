generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  SUPERVISOR
  OPERARIO
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  role      UserRole @default(OPERARIO)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations (to be added later)
  // projects Project[]
  // tasks    Task[]
  RefreshToken RefreshToken[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
}

enum TipoMovimiento {
  ingreso
  venta
}

model Articulos {
  ID_Producto              Int           @id @default(autoincrement())
  Producto                 String
  Cantidad                 Int
  Precio                   Decimal       @db.Decimal(10, 2)
  Precio_total_disponible  Decimal       @db.Decimal(10, 2)

  movimientos              Movimientos[]
}

model Movimientos {
  ID_transaccion           Int           @id @default(autoincrement())
  ID_producto              Int
  Producto                 String
  Cantidad                 Int
  Tipo_movimiento          TipoMovimiento
  Fecha_transaccion        DateTime      @default(now())
  Obra_destino             String?
  Remito                   String?
  Observacion              String?
  Precio                   Decimal       @db.Decimal(10, 2)
  Tipo_unidad              String
  Precio_total_disponible  Decimal       @db.Decimal(10, 2)

  articulo                 Articulos     @relation(fields: [ID_producto], references: [ID_Producto])

  @@index([ID_producto])
}